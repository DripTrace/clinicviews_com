// import { createSlice, PayloadAction, AnyAction } from "@reduxjs/toolkit";
// import { HYDRATE } from "next-redux-wrapper";

// interface ConvoState {
// 	isMenuOpen: boolean;
// 	theme: "light" | "dark";
// }

// const initialState: ConvoState = {
// 	isMenuOpen: false,
// 	theme: "light",
// };

// const convoSlice = createSlice({
// 	name: "convo",
// 	initialState,
// 	reducers: {
// 		toggleMenu: (state) => {
// 			state.isMenuOpen = !state.isMenuOpen;
// 		},
// 		setTheme: (state, action: PayloadAction<"light" | "dark">) => {
// 			state.theme = action.payload;
// 		},
// 	},
// 	extraReducers: (builder) => {
// 		builder.addCase(HYDRATE, (state, action: AnyAction) => {
// 			if (action.payload && action.payload.ui) {
// 				return {
// 					...state,
// 					...action.payload.ui,
// 				};
// 			}
// 			return state;
// 		});
// 	},
// });

// export const { toggleMenu, setConvo } = convoSlice.actions;
// export default convoSlice.reducer;
